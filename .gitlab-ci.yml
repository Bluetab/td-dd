variables:
  VERSION: "5.20.1-alpha.1" # used for alpha builds
  APP_NAME: "td_dd"
  COMPOSE_FILE: "ci/docker-compose.yml"
  COMPOSE_PROJECT_NAME: "${APP_NAME}_${CI_JOB_ID}"
  K8S_DEPLOYMENT: dd
  K8S_CONTAINER: dd
  ECR: 576759405678.dkr.ecr.eu-west-1.amazonaws.com
  ECR_NAMESPACE: truedat
  # See also variables set in ci/env.sh

stages:
  - build
  - publish
  - acceptance
  - deploy

before_script:
  - source ci/env.sh ecr-login

build:
  stage: build
  tags:
    - docker-compose
  script:
    - docker-compose run --rm build
  after_script:
    - docker-compose down -v
  artifacts:
    paths:
      - _build/prod/*.tar.gz

test:
  stage: build
  tags:
    - docker-compose
  script:
    - docker-compose run --rm test
  after_script:
    - docker-compose down -v

publish:
  stage: publish
  only:
    - develop
    - tags
  tags:
    - docker
  script:
    - docker build --build-arg APP_NAME=${APP_NAME} --build-arg APP_VERSION=${APP_VERSION} -t ${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} .
    - docker tag ${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} ${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${APP_VERSION}
    - docker push ${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${APP_VERSION}

publish:branches:
  stage: deploy
  except:
    - develop
    - main
    - tags
  when: manual
  tags:
    - docker
  script:
    - docker build --build-arg APP_NAME=${APP_NAME} --build-arg APP_VERSION=${APP_VERSION} -t ${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} .
    - docker tag ${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} ${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${APP_VERSION}
    - docker push ${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${APP_VERSION}    

acceptance:
  stage: acceptance
  only:
    - develop
    - tags
  tags:
    - docker-compose
  dependencies: []
  script:
    - docker-compose up -d redis postgres elastic vault
    - docker-compose run --rm wait_for_elastic
    - docker-compose run --rm acceptance
  after_script:
    - docker-compose logs elastic
    - docker-compose logs service
    - docker-compose down -v

acceptance:branches:
  stage: acceptance
  except:
    - develop
    - main
    - tags
  tags:
    - docker-compose
  script:
    - docker-compose up -d redis postgres elastic vault
    - docker build --build-arg APP_NAME=${APP_NAME} --build-arg APP_VERSION=${APP_VERSION} -t ${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} .
    - docker tag ${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} ${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${APP_VERSION}
    - docker-compose run --rm wait_for_elastic
    - docker-compose run --rm acceptance
  after_script:
    - docker-compose logs elastic
    - docker-compose logs service
    - docker-compose down -v

deploy:
  stage: deploy
  tags:
    - dind
  image: danielbluetab/helm-aws-cli:4
  only:
    - develop
    - tags
    - update-cicd-deploy
  dependencies: []
  before_script:
    - ALPHA_VERSION="${VERSION}-alpha.${CI_PIPELINE_ID}" # used if CI_COMMIT_TAG is not present
    - export APP_VERSION="${CI_COMMIT_TAG:-${ALPHA_VERSION}}"
    - export CURRENT_UID="$(id -u):$(id -g)"

  script:
    - aws eks --region eu-west-1 update-kubeconfig --name test-truedat-eks
    - kubectl set image deployment.v1.apps/${K8S_DEPLOYMENT} ${K8S_CONTAINER}=${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${APP_VERSION} --record
