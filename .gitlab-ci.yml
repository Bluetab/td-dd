variables:
  VERSION: "3.14.1"
  APP_NAME: "td_dq"
  COMPOSE_FILE: "ci/docker-compose.yml"
  COMPOSE_PROJECT_NAME: "${APP_NAME}_${CI_JOB_ID}"
  # See also variables set in ci/env.sh

stages:
  - build
  - publish
  - acceptance
  - deploy

before_script:
  - source ci/env.sh ecr-login

build:
  stage: build
  tags:
    - docker-compose
  script:
    - docker-compose run --rm build
  after_script:
    - docker-compose down -v
  artifacts:
    paths:
      - _build/prod/rel/${APP_NAME}/releases/*/*.tar.gz

test:
  stage: build
  tags:
    - docker-compose
  script:
    - docker-compose run --rm test
  after_script:
    - docker-compose down -v

publish:
  stage: publish
  only:
    - master
    - tags
  tags:
    - docker
  script:
    - docker build --build-arg APP_NAME=${APP_NAME} --build-arg APP_VERSION=${APP_VERSION} -t ${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} .
    - docker tag ${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} ${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${APP_VERSION}
    - docker push ${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${APP_VERSION}

acceptance:
  stage: acceptance
  only:
    - master
    - tags
  tags:
    - docker-compose
  dependencies: []
  script:
    - docker-compose run --rm wait_for_elastic
    - docker-compose run --rm acceptance
    - docker-compose logs elastic
    - docker-compose logs service
  after_script:
    - docker-compose down -v

acceptance:branches:
  stage: acceptance
  except:
    - master
    - tags
  tags:
    - docker-compose
  script:
    - docker build --build-arg APP_NAME=${APP_NAME} --build-arg APP_VERSION=${APP_VERSION} -t ${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} .
    - docker tag ${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} ${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${APP_VERSION}
    - docker-compose run --rm wait_for_elastic
    - docker-compose run --rm acceptance
    - docker-compose logs elastic
    - docker-compose logs service
  after_script:
    - docker-compose down -v

deploy:
  stage: deploy
  tags:
    - kubectl
  only:
    - master
    - tags
  dependencies: []
  script:
    - kubectl set image deployment.v1.apps/${K8S_DEPLOYMENT} ${K8S_CONTAINER}=${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${APP_VERSION} --record
