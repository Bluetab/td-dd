stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - docker run --rm -v $(pwd):/code:ro -w /code --entrypoint=/code/ci/build.sh bluetab/amazonlinux-phoenix-postgresql-redis:20180709225133
  artifacts:
    untracked: true

test:
  stage: test
  script:
    - docker run --rm -v $(pwd):/code:ro -w /code --entrypoint=/code/ci/test.sh bluetab/amazonlinux-phoenix-postgresql-redis:20180709225133
  artifacts:
    untracked: true

publish:
  stage: deploy
  script:
    - git branch -f master HEAD
    - export VERSION=$(grep -e '\bversion:' mix.exs | cut -d\" -f2)
    - export PROJECT_NAME=${PWD##*/}
    - export REDIS_URI=$(echo $REDIS_URI | sed -e "s/\//\\\\\//g")
    - docker build --build-arg APP_VERSION=${VERSION} --build-arg APP_NAME=td_dq --build-arg MIX_ENV=prod -t bluetab-truedat/$PROJECT_NAME:latest .
    - docker run --rm -t $(tty &>/dev/null && echo "-i") -e "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" -e "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" -e REDIS_URI=$REDIS_URI -e "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}" mesosphere/aws-cli ecr get-login --no-include-email --region $AWS_DEFAULT_REGION | awk '{ sub("\r$", ""); print }' > output
    - bash -f output
    - export ECR=$(cat output | egrep -o 'https?://[^ ]+' | awk -F/ '{print $3}')
    - docker tag bluetab-truedat/$PROJECT_NAME:latest $ECR/bluetab-truedat/$PROJECT_NAME:latest
    - docker tag bluetab-truedat/$PROJECT_NAME:latest $ECR/bluetab-truedat/$PROJECT_NAME:${VERSION}
    - docker push $ECR/bluetab-truedat/$PROJECT_NAME:latest
    - docker push $ECR/bluetab-truedat/$PROJECT_NAME:${VERSION}
    - rm output
  only:
    - master
