{
  "swagger": "2.0",
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/data_structures/{id}": {
      "get": {
        "tags": [
          "DataStructure"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/DataStructureResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Data Structure ID"
          }
        ],
        "operationId": "TdDdWeb.DataStructureController.show",
        "description": "Show Data Structure"
      },
      "delete": {
        "tags": [
          "DataStructure"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "204": {
            "description": "No Content"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Data Structure ID"
          }
        ],
        "operationId": "TdDdWeb.DataStructureController.delete",
        "description": "Delete Data Structure"
      }
    },
    "/data_structures/{data_structure_id}/data_fields": {
      "get": {
        "tags": [
          "DataField"
        ],
        "summary": "",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DataFieldsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "data_structure_id",
            "in": "path",
            "description": "Data Structure ID"
          }
        ],
        "operationId": "TdDdWeb.DataFieldController.data_structure_fields",
        "description": "List data structure data fields"
      }
    },
    "/data_structures/{data_structure_id}/comment": {
      "get": {
        "tags": [
          "Comment"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "data_structure_id",
            "in": "path",
            "description": "Data Structure ID"
          }
        ],
        "operationId": "TdDdWeb.CommentController.get_comment_data_structure",
        "description": "Show Data Structure Comment"
      }
    },
    "/data_structures": {
      "post": {
        "tags": [
          "DataStructure"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/DataStructureResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/DataStructureCreate"
            },
            "required": false,
            "name": "data_field",
            "in": "body",
            "description": "Data Structure update attrs"
          }
        ],
        "operationId": "TdDdWeb.DataStructureController.update",
        "description": "Update Data Structures"
      },
      "get": {
        "tags": [
          "DataStructure"
        ],
        "summary": "",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DataStructuresResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [],
        "operationId": "TdDdWeb.DataStructureController.index",
        "description": "List Data Structures"
      }
    },
    "/data_fields/{id}": {
      "get": {
        "tags": [
          "DataField"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/DataFieldResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Data Field ID"
          }
        ],
        "operationId": "TdDdWeb.DataFieldController.show",
        "description": "Show Data Field"
      },
      "delete": {
        "tags": [
          "DataField"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "204": {
            "description": "No Content"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Data Field ID"
          }
        ],
        "operationId": "TdDdWeb.DataFieldController.delete",
        "description": "Delete Data Field"
      }
    },
    "/data_fields/{data_field_id}/comment": {
      "get": {
        "tags": [
          "Comment"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "data_field_id",
            "in": "path",
            "description": "Data Field ID"
          }
        ],
        "operationId": "TdDdWeb.CommentController.get_comment_data_field",
        "description": "Show Data Field Comment"
      }
    },
    "/data_fields": {
      "post": {
        "tags": [
          "DataField"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/DataFieldResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/DataFieldCreate"
            },
            "required": false,
            "name": "data_field",
            "in": "body",
            "description": "Data Field update attrs"
          }
        ],
        "operationId": "TdDdWeb.DataFieldController.update",
        "description": "Update Data Fields"
      },
      "get": {
        "tags": [
          "DataField"
        ],
        "summary": "",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DataFieldsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [],
        "operationId": "TdDdWeb.DataFieldController.index",
        "description": "List Data Fields"
      }
    },
    "/comments/{id}": {
      "get": {
        "tags": [
          "Comment"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Comment ID"
          }
        ],
        "operationId": "TdDdWeb.CommentController.show",
        "description": "Show Comment"
      },
      "delete": {
        "tags": [
          "Comment"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "204": {
            "description": "No Content"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Comment ID"
          }
        ],
        "operationId": "TdDdWeb.CommentController.delete",
        "description": "Delete Comment"
      }
    },
    "/comments": {
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CommentCreate"
            },
            "required": false,
            "name": "comment",
            "in": "body",
            "description": "Comment update attrs"
          }
        ],
        "operationId": "TdDdWeb.CommentController.update",
        "description": "Update Comments"
      },
      "get": {
        "tags": [
          "Comment"
        ],
        "summary": "",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CommentsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [],
        "operationId": "TdDdWeb.CommentController.index",
        "description": "List Comments"
      }
    }
  },
  "info": {
    "version": "1.0",
    "title": "TdDd"
  },
  "host": "localhost:4005",
  "definitions": {
    "DataStructuresResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/DataStructures"
        }
      }
    },
    "DataStructures": {
      "type": "array",
      "title": "Data Structures",
      "items": {
        "$ref": "#/definitions/DataStructure"
      },
      "description": "A collection of Data Structures"
    },
    "DataStructureUpdate": {
      "type": "object",
      "properties": {
        "data_structure": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Data Structure type (csv, table...)"
            },
            "ou": {
              "type": "string",
              "description": "Data Structure organizational unit"
            },
            "lopd": {
              "type": "string",
              "description": "Data Structure lopd level"
            },
            "id": {
              "type": "integer",
              "description": "Data Structure unique identifier"
            },
            "description": {
              "type": "string",
              "description": "Data Structure description"
            }
          }
        }
      }
    },
    "DataStructureResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/DataStructure"
        }
      }
    },
    "DataStructureCreate": {
      "type": "object",
      "properties": {
        "data_structure": {
          "type": "object",
          "required": [
            "name",
            "group",
            "system"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Data Structure type (csv, table...)"
            },
            "system": {
              "type": "string",
              "description": "Data Structure system"
            },
            "ou": {
              "type": "string",
              "description": "Data Structure organizational unit"
            },
            "name": {
              "type": "string",
              "description": "Data Structure name"
            },
            "lopd": {
              "type": "string",
              "description": "Data Structure lopd level"
            },
            "group": {
              "type": "string",
              "description": "Data Structure group"
            },
            "description": {
              "type": "string",
              "description": "Data Structure description"
            }
          }
        }
      }
    },
    "DataStructure": {
      "type": "object",
      "title": "Data Structure",
      "required": [
        "name",
        "group",
        "system",
        "id"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Data Structure type (csv, table...)"
        },
        "system": {
          "type": "string",
          "description": "Data Structure system"
        },
        "ou": {
          "type": "string",
          "description": "Data Structure organizational unit"
        },
        "name": {
          "type": "string",
          "description": "Data Structure name"
        },
        "lopd": {
          "type": "string",
          "description": "Data Structure lopd level"
        },
        "last_change_by": {
          "type": "string",
          "description": "Data Structure last updated by"
        },
        "last_change_at": {
          "type": "string",
          "description": "Data Structure last updated at"
        },
        "inserted_at": {
          "type": "string",
          "description": "Data Structure creation date"
        },
        "id": {
          "type": "integer",
          "description": "Data Structure unique identifier"
        },
        "group": {
          "type": "string",
          "description": "Data Structure group"
        },
        "description": {
          "type": "string",
          "description": "Data Structure description"
        }
      },
      "example": {
        "type": "Csv",
        "system": "Data Structure system",
        "ou": "General Management",
        "name": "Data Structure name",
        "lopd": "1",
        "inserted_at": "2018-05-08T17:17:59.691460",
        "id": 123,
        "group": "Data Structure group",
        "description": "Data Structure description"
      },
      "description": "A Data Structure"
    },
    "DataFieldsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/DataFields"
        }
      }
    },
    "DataFields": {
      "type": "array",
      "title": "Data Fields",
      "items": {
        "$ref": "#/definitions/DataField"
      },
      "description": "A collection of Data Fields"
    },
    "DataFieldUpdate": {
      "type": "object",
      "properties": {
        "data_field": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Data Field type"
            },
            "precision": {
              "type": "integer",
              "description": "Data Field precision"
            },
            "nullable": {
              "type": "boolean",
              "description": "Data Field... is nullable"
            },
            "id": {
              "type": "integer",
              "description": "Data Field unique identifier"
            },
            "description": {
              "type": "string",
              "description": "Data Field descrition"
            },
            "business_concept_id": {
              "type": "string",
              "description": "Asociated Business Concept Id"
            }
          }
        }
      }
    },
    "DataFieldResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/DataField"
        }
      }
    },
    "DataFieldCreate": {
      "type": "object",
      "properties": {
        "data_field": {
          "type": "object",
          "required": [
            "data_structure_id",
            "name"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Data Field type"
            },
            "precision": {
              "type": "string",
              "description": "Data Field precision"
            },
            "nullable": {
              "type": "boolean",
              "description": "Data Field... is nullable"
            },
            "name": {
              "type": "string",
              "description": "Data Field name"
            },
            "description": {
              "type": "string",
              "description": "Data Field descrition"
            },
            "data_structure_id": {
              "type": "integer",
              "description": "Belongs to Data Structure"
            },
            "business_concept_id": {
              "type": "string",
              "description": "Asociated Business Concept Id"
            }
          }
        }
      }
    },
    "DataField": {
      "type": "object",
      "title": "Data Field",
      "required": [
        "data_structure_id",
        "name",
        "id"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Data Field type"
        },
        "precision": {
          "type": "string",
          "description": "Data Field precision"
        },
        "nullable": {
          "type": "boolean",
          "description": "Data Field... is nullable"
        },
        "name": {
          "type": "string",
          "description": "Data Field name"
        },
        "last_change_by": {
          "type": "string",
          "description": "Data Field last updated by"
        },
        "last_change_at": {
          "type": "string",
          "description": "Data Field last updated at"
        },
        "inserted_at": {
          "type": "string",
          "description": "Data Field creation date"
        },
        "id": {
          "type": "integer",
          "description": "Data Field unique identifier"
        },
        "description": {
          "type": "string",
          "description": "Data Field descrition"
        },
        "data_structure_id": {
          "type": "integer",
          "description": "Belongs to Data Structure"
        },
        "business_concept_id": {
          "type": [
            "string",
            "null"
          ],
          "description": "Asociated Business Concept Id"
        }
      },
      "example": {
        "type": "Data Field type",
        "precision": "Data Field precision",
        "nullable": true,
        "name": "Data Field name",
        "last_change_by": 1,
        "last_change_at": "2010-04-17 14:00:00",
        "inserted_at": "2018-05-08T17:17:59.691460",
        "id": 123,
        "description": "Data Field descrition",
        "data_structure_id": 11,
        "business_concept_id": "123456"
      },
      "description": "A Data Structure Data Field"
    },
    "CommentsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Comments"
        }
      }
    },
    "Comments": {
      "type": "array",
      "title": "Comments",
      "items": {
        "$ref": "#/definitions/Comment"
      },
      "description": "A collection of Comments"
    },
    "CommentUpdate": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "resource_type": {
              "type": "string",
              "description": "Resource type"
            },
            "resource_id": {
              "type": "integer",
              "description": "Resource identifier"
            },
            "id": {
              "type": "integer",
              "description": "Comment unique identifier"
            },
            "content": {
              "type": "string",
              "description": "Comment content"
            }
          }
        }
      }
    },
    "CommentResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Comment"
        }
      }
    },
    "CommentCreate": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "object",
          "required": [
            "content",
            "resource_type",
            "resource_id"
          ],
          "properties": {
            "resource_type": {
              "type": "string",
              "description": "Resource type"
            },
            "resource_id": {
              "type": "integer",
              "description": "Resource identifier"
            },
            "content": {
              "type": "string",
              "description": "Comment content"
            }
          }
        }
      }
    },
    "Comment": {
      "type": "object",
      "title": "Comment",
      "required": [
        "content",
        "user_id",
        "resource_type",
        "resource_id",
        "id"
      ],
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User identifier"
        },
        "resource_type": {
          "type": "string",
          "description": "Resource type"
        },
        "resource_id": {
          "type": "integer",
          "description": "Resource identifier"
        },
        "id": {
          "type": "integer",
          "description": "Comment unique identifier"
        },
        "content": {
          "type": "string",
          "description": "Comment content"
        }
      },
      "example": {
        "user_id": 1,
        "resource_type": "Field",
        "resource_id": 123,
        "content": "This is a comment"
      },
      "description": "A Data Structure/Field Comment"
    }
  },
  "basePath": "/api"
}