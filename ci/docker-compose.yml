# Use postgres/example user/password credentials
version: "3.4"

services:
  postgres:
    image: postgres:9.6.10-alpine
    restart: always
    healthcheck:
      test: echo "SELECT 1" | psql --username postgres --quiet --no-align --tuples-only | grep -q 1 || exit 1
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 10s

  redis:
    image: library/redis:5.0-alpine
    command: redis-server --appendonly yes
    healthcheck:
      test: redis-cli -h localhost ping | grep -q PONG || exit 1
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 10s

  build:
    image: bluetab/elixir:1.7.4-alpine-20190513182216
    command: ci/build.sh
    environment:
      APP_VERSION: "${APP_VERSION}"
      HOME: /tmp # CURRENT_UID doesn't have a home
      MIX_ENV: prod
      MIX_HOME: /code/.mix
    user: ${CURRENT_UID-0:0}
    working_dir: /code
    volumes:
      - "${CI_PROJECT_DIR}:/code"

  test:
    image: bluetab/elixir:1.7.4-alpine-20190513182216
    command: ci/test.sh
    environment:
      HOME: /tmp # CURRENT_UID doesn't have a home
      MIX_ENV: test
      MIX_HOME: /code/.mix
    working_dir: /code
    user: ${CURRENT_UID-0:0}
    volumes:
      - "${CI_PROJECT_DIR}:/code"
    depends_on:
      - postgres
      - redis

  service:
    image: ${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${APP_VERSION}
    environment:
      DB_HOST: postgres
      DB_NAME: postgres
      DB_PASSWORD: postgres
      DB_USER: postgres
      REDIS_HOST: redis
      REPLACE_OS_VARS: "true"
    depends_on:
      - postgres
      - redis

  acceptance:
    image: bluetab/wait-for:20190507133127
    command: service:4004 -t 30 -- curl --silent service:4004/api/ping
    depends_on:
      - service
